import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id 'org.springframework.boot' version '3.0.5'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
}

group = 'com.peoplecloud'
version = '0.0.1-SNAPSHOT'

group = 'com.boomstream'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.1")
    set('jacksonVersion', "2.13.0")
    set('springDocVersion', "2.2.0")
    set('deeplVersion', "1.5.0")
    set('tesseractVersion', "5.11.0")
    set('pdfBoxVersion', "2.0.24")
    set('itextPdf', "7.2.1")
    set('jsoupVersion', "1.14.3")
    set('seleniumVersion', "4.5.3")
    set('apachePoiVersion', "5.2.2")
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation("org.springframework.boot:spring-boot-starter")
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation("org.springframework.kafka:spring-kafka")
    implementation("com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion")
    implementation "com.deepl.api:deepl-java:$deeplVersion"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:$springDocVersion"
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'org.postgresql:postgresql'

    //Tesseract
    implementation("net.sourceforge.tess4j:tess4j:$tesseractVersion")

    // Apache PDFBox for extracting text and images
    implementation("org.apache.pdfbox:pdfbox:$pdfBoxVersion")

    // iText for generating PDF
    implementation("com.itextpdf:kernel:$itextPdf")
    implementation("com.itextpdf:layout:$itextPdf")
    implementation("com.itextpdf:io:$itextPdf")
    implementation "com.itextpdf:itext7-core:$itextPdf"
    implementation "com.itextpdf:forms:$itextPdf"     // Для работы с PDF формами

    implementation("org.jsoup:jsoup:$jsoupVersion")      // для парсинга HTML

    //ApachePOI word file parsing
    implementation "org.apache.poi:poi-ooxml:$apachePoiVersion"
    implementation "org.apache.poi:poi:$apachePoiVersion"

    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs = ['-Xjsr305=strict']
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

